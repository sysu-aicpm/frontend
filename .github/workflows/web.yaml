name: Build and publish docker of web app

on:
  push:
    branches: 
      - "main"
      - "master"
      - "ci-test"
    tags: 
      - "v*"
    paths: 
      - "lib/**"
      - "pubspec.yaml"
      - "assets/**"
      - ".github/workflows/web.yaml"
      - "Dockerfile"
      - "web/**"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: frontend
  ORGANIZATION: sysu-aicpm

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: Install os dependencies
        run: sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libsecret-1-dev libjsoncpp-dev
      - name: Install project dependencies
        run: flutter pub get
      - name: Generate intermediates
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Enable web build
        run: flutter config --enable-web
      - name: Build web
        run: flutter build web --release
      
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{raw}}
            type=sha,enable=${{ !startsWith(github.ref, 'refs/tags/v') }},prefix=,suffix=,format=long
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: Build and push Docker image (untagged)
        uses: docker/build-push-action@v4
        if:  ${{ !startsWith(github.ref, 'refs/tags/v') }}
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push Docker image (tagged)
        uses: docker/build-push-action@v4
        if:  ${{ startsWith(github.ref, 'refs/tags/v') }}
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Prune old packages
        uses: vlaurin/action-ghcr-prune@v0.5.0
        with:
          dry-run: false
          token: ${{ secrets.GITHUB_TOKEN }}
          organization: ${{ env.ORGANIZATION }}
          container: ${{ env.IMAGE_NAME }}
          keep-tags-regexes: ^v(.)*
          prune-tags-regexes: |
            ^[0-9a-f]{6,40}
            sha-*
            pr-*
          keep-tags: |
            latest
          keep-last: 5
          prune-untagged: true
